name: Release Please

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: release-please
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Only run publish steps when a release was actually created
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          ref: ${{ steps.release.outputs.tag_name }}
          fetch-depth: 0
          persist-credentials: false

      # Install pnpm first so setup-node's pnpm cache can run
      - uses: pnpm/action-setup@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          version: 8.15.0
          run_install: false

      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Configure npm auth
        if: ${{ steps.release.outputs.release_created }}
        run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm install --frozen-lockfile

      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm build

      - name: Publish to npm
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Get version (release-please already updated all package.json files)
          VERSION=$(node -p "require('./package.json').version")

          # Replace workspace:* with actual version in CLI package.json
          sed -i.bak "s/\"@c-ehrlich\/cjode-server\": \"workspace:\*\"/\"@c-ehrlich\/cjode-server\": \"$VERSION\"/" packages/cli/package.json

          # Publish both packages (versions already synchronized by release-please)
          cd packages/cli && npm publish
          cd ../server && npm publish
